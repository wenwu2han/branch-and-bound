分支界限算法 之单源最短路径

题目简述：
见图1
分支限界具体见百度。

分支界限算法核心思想：
在每次分支后，对凡是界限超出已知可行解值那些子集不再做进一步分支。这样，解的许多子集（即搜索树上的许多结点）就可以不予考虑了，从而缩小了搜索范围。

个人理解：
什么叫分支限界？演示如下:（以ＦＩＦＯ队列方法做演示）
１.将这个图转化成树的形式，如下所示：
见图2
创建队列。
１．节点１入队列，Ｑ＝｛１｝。
我们取出队头节点，作为扩散节点，更新他的后代的值。
　此题中更新节点２，３，４　的距离，并将他们加入队列，Ｑ＝｛１，２，３，４｝。
完成后节点１出队。Ｑ＝｛２，３，４｝。
２.　同样，重复１的步骤，Ｑ＝｛３，４，５，６｝；
３.　当我们取到节点３时，我们发现源点－＞节点３－＞节点６的距离为１１，
大于　１－２－６　这条路径的权重，所以１－３－６这条路径之后我们不再考虑。
这就是“限界”（称为”剪枝“）的思想。
４.　重复步骤，直到Ｑ为空。

优先队列法方法和FIFO方法类似，区别在于优先队列每次取队列元素中到源点距离最短的点。

二者运行结果如下：
[9999, 0, 4, 2, 5, 7, 9, 12, 11, 15, 15]
头一个9999只是补位用的，不用看。

总结：其实可以看出优先队列的分支限界算法和Dijkstra算法的相似性很大，都是取离源点最近的点做扩散点，但是不同在于优先队列的分支限界可以让边权为负（但是负权环路会造成死循环），而Dijkstra不行，因为两者维护的队列的意义不同。

